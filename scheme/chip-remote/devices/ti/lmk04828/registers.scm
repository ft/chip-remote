;; Copyright (c) 2014 chip-remote workers, All rights reserved.
;;
;; Terms for redistribution and use can be found in LICENCE.

(define-module (chip-remote devices ti lmk04828 registers)
  #:use-module ((chip-remote devices ti lmk04828 conversions)
                #:renamer (symbol-prefix-proc 'conv:))
  #:use-module (chip-remote devices ti lmk04828 tables)
  #:use-module (chip-remote assemble)
  #:use-module (chip-remote bit-decoders)
  #:use-module (chip-remote register-map)
  #:export (lmk04828-register-width
            lmk04828-read-only-registers))

;; Some abbreviations used in the device's datasheet and therefore herein:
;;
;; - ODL: Output-Drive-Level
;; - IDL: Input-Drive-Level
;; - DIV: Divider
;; - DDLY: Digital-Delay
;; - ADLY: Analog-Delay
;; - HS: Half-Step
;; - LOS: Locked-on-Signal
;; - LD: Lock-detectect
;; - DLD: Digital Lock-detectect

(define lmk04828-register-width 8)

(define lmk04828-read-only-registers
  '(#x3 #x4 #x5 #x6 #xc #xd #x184 #x185 #x188))

(define (decode-dac-trip n o w value)
  (format #f "~d times Vcc/64" (+ 1 value)))

(define (decode-lock-word-high-mid n o w value)
  (if (zero? value) 'unlocked 'locked))

(define (decode-lock-word-low n o w value)
  (if (= value 83) 'unlocked 'locked))

(define-register-map lmk04828
  (#x0000 (default-value 0)
          (contents (reset 7 1 => logic-active-high)
                    (enable-spi-three-wire 4 1 => logic-active-low)))
  (#x0002 (default-value 0)
          (contents (powerdown 0 1 => logic-active-high)))
  ;; The following registers are read-only...
  (#x0003 (default-value 6)
          (contents (id-device-type 0 8)))
  (#x0004 (default-value 208)
          (contents (id-product-high 0 8)))
  (#x0005 (default-value 91)
          (contents (id-product-low 0 8)))
  (#x0006 (default-value 32)
          (contents (id-maskrev 0 8)))
  (#x000c (default-value 81)
          (contents (id-vendor-high 0 8)))
  (#x000d (default-value 4)
          (contents (id-vendor-low 0 8)))
  ;; ...up to here.
  ;;
  ;; Then #x0100...#x0137 are Device Clock and SYSREF Clock Output Controls.
  (#x0100 (default-value 2)
          (contents (clkout0-1-odl 6 1 => logic-active-high)
                    (clkout0-1-idl 5 1 => logic-active-high)
                    (dclkout0-div 0 5 => conv:bits->clkout-divider)))
  (#x0101 (default-value #x55)
          (contents (dclkout0-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout0-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x0103 (default-value 0)
          (contents (dclkout0-adly 3 5 => conv:bits->analog-delay)
                    (dclkout0-adly-mux 2 1 => logic-active-high)
                    (dclkout0-mux 0 2 => clkout-mux-map)))
  (#x0104 (default-value 0)
          (contents (dclkout0-hs 6 1 => logic-active-high)
                    (sdclkout1-mux 5 1 => devclk-sysref-map)
                    (sdclkout1-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout1-hs 0 1 => logic-active-high)))
  (#x0105 (default-value 0)
          (contents (enable-sdclkout1-adly 4 1 => logic-active-high)
                    (sdclkout1-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x0106 (default-value #b01111001)
          (contents (dclkout0-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout0-hsg-powerdown 6 1 => logic-active-high)
                    (dclkout0-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout0-adly-powerdown 4 1 => logic-active-high)
                    (clkout0-1-powerdown 3 1 => logic-active-high)
                    (sdclkout1-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout1-powerdown 0 1 => logic-active-high)))
  (#x0107 (default-value 0)
          (contents (sdclkout1-polarity 7 1 => output-polarity-map)
                    (clkout1-format 4 3 => output-format-map)
                    (dclkout0-polarity 3 1 => output-polarity-map)
                    (clkout0-format 0 3 => output-format-map)))
  (#x0108 (default-value 4)
          (contents (clkout2-3-odl 6 1 => logic-active-high)
                    (clkout2-3-idl 5 1 => logic-active-high)
                    (dclkout2-div 0 5 => conv:bits->clkout-divider)))
  (#x0109 (default-value #x55)
          (contents (dclkout2-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout2-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x010b (default-value 0)
          (contents (dclkout2-adly 3 5 => conv:bits->analog-delay)
                    (dclkout2-adly-mux 2 1 => logic-active-high)
                    (dclkout2-mux 0 2 => clkout-mux-map)))
  (#x010c (default-value 0)
          (contents (dclkout2-hs 6 1 => logic-active-high)
                    (sdclkout3-mux 5 1 => devclk-sysref-map)
                    (sdclkout3-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout3-hs 0 1 => logic-active-high)))
  (#x010d (default-value 0)
          (contents (enable-sdclkout3-adly 4 1 => logic-active-high)
                    (sdclkout3-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x010e (default-value #b01111001)
          (contents (dclkout2-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout2-hsg-powerdown 6 1 => logic-active-high)
                    (dclkout2-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout2-adly-powerdown 4 1 => logic-active-high)
                    (clkout2-3-powerdown 3 1 => logic-active-high)
                    (sdclkout3-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout3-powerdown 0 1 => logic-active-high)))
  (#x010f (default-value 0)
          (contents (sdclkout3-polarity 7 1 => output-polarity-map)
                    (clkout3-format 4 3 => output-format-map)
                    (dclkout2-polarity 3 1 => output-polarity-map)
                    (clkout2-format 0 3 => output-format-map)))
  (#x0110 (default-value 8)
          (contents (clkout4-5-odl 6 1 => logic-active-high)
                    (clkout4-5-idl 5 1 => logic-active-high)
                    (dclkout4-div 0 5 => conv:bits->clkout-divider)))
  (#x0111 (default-value #x55)
          (contents (dclkout4-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout4-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x0113 (default-value 0)
          (contents (dclkout4-adly 3 5 => conv:bits->analog-delay)
                    (dclkout4-adly-mux 2 1 => logic-active-high)
                    (dclkout4-mux 0 2 => clkout-mux-map)))
  (#x0114 (default-value 0)
          (contents (dclkout4-hs 6 1 => logic-active-high)
                    (sdclkout5-mux 5 1 => devclk-sysref-map)
                    (sdclkout5-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout5-hs 0 1 => logic-active-high)))
  (#x0115 (default-value 0)
          (contents (enable-sdclkout5-adly 4 1 => logic-active-high)
                    (sdclkout5-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x0116 (default-value #b01110001)
          (contents (dclkout4-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout4-hsg-powerdown 6 1 => logic-active-high)
                    (dclkout4-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout4-adly-powerdown 4 1 => logic-active-high)
                    (clkout4-5-powerdown 3 1 => logic-active-high)
                    (sdclkout5-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout5-powerdown 0 1 => logic-active-high)))
  (#x0117 (default-value 1)
          (contents (sdclkout5-polarity 7 1 => output-polarity-map)
                    (clkout5-format 4 3 => output-format-map)
                    (dclkout4-polarity 3 1 => output-polarity-map)
                    (clkout4-format 0 3 => output-format-map)))
  (#x0118 (default-value 8)
          (contents (clkout6-7-odl 6 1 => logic-active-high)
                    (clkout6-8-idl 5 1 => logic-active-high)
                    (dclkout6-div 0 5 => conv:bits->clkout-divider)))
  (#x0119 (default-value #x55)
          (contents (dclkout6-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout6-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x011b (default-value 0)
          (contents (dclkout6-adly 3 5 => conv:bits->analog-delay)
                    (dclkout6-adly-mux 2 1 => logic-active-high)
                    (dclkout6-mux 0 2 => clkout-mux-map)))
  (#x011c (default-value 0)
          (contents (dclkout6-hs 6 1 => logic-active-high)
                    (sdclkout7-mux 5 1 => devclk-sysref-map)
                    (sdclkout7-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout7-hs 0 1 => logic-active-high)))
  (#x011d (default-value 0)
          (contents (enable-sdclkout7-adly 4 1 => logic-active-high)
                    (sdclkout7-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x011e (default-value #b01110001)
          (contents (dclkout6-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout6-hsg-powerdown 6 1 => logic-active-high)
                    (dclkout6-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout6-adly-powerdown 4 1 => logic-active-high)
                    (clkout6-7-powerdown 3 1 => logic-active-high)
                    (sdclkout7-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout7-powerdown 0 1 => logic-active-high)))
  (#x011f (default-value 1)
          (contents (sdclkout7-polarity 7 1 => output-polarity-map)
                    (clkout7-format 4 3 => output-format-map)
                    (dclkout6-polarity 3 1 => output-polarity-map)
                    (clkout6-format 0 3 => output-format-map)))
  (#x0120 (default-value 8)
          (contents (clkout8-9-odl 6 1 => logic-active-high)
                    (clkout8-9-idl 5 1 => logic-active-high)
                    (dclkout8-div 0 5 => conv:bits->clkout-divider)))
  (#x0121 (default-value #x55)
          (contents (dclkout8-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout8-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x0123 (default-value 0)
          (contents (dclkout8-adly 3 5 => conv:bits->analog-delay)
                    (dclkout8-adly-mux 2 1 => logic-active-high)
                    (dclkout8-mux 0 2 => clkout-mux-map)))
  (#x0124 (default-value 0)
          (contents (dclkout8-hs 6 1 => logic-active-high)
                    (sdclkout9-mux 5 1 => devclk-sysref-map)
                    (sdclkout9-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout9-hs 0 1 => logic-active-high)))
  (#x0125 (default-value 0)
          (contents (enable-sdclkout9-adly 4 1 => logic-active-high)
                    (sdclkout9-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x0126 (default-value #b01110001)
          (contents (dclkout8-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout8-hsg-powerdown 6 1 => logic-active-high)
                    (dclkout8-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout8-adly-powerdown 4 1 => logic-active-high)
                    (clkout8-9-powerdown 3 1 => logic-active-high)
                    (sdclkout9-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout9-powerdown 0 1 => logic-active-high)))
  (#x0127 (default-value 1)
          (contents (sdclkout9-polarity 7 1 => output-polarity-map)
                    (clkout9-format 4 3 => output-format-map)
                    (dclkout8-polarity 3 1 => output-polarity-map)
                    (clkout8-format 0 3 => output-format-map)))
  (#x0128 (default-value 8)
          (contents (clkout10-11-odl 6 1 => logic-active-high)
                    (clkout10-11-idl 5 1 => logic-active-high)
                    (dclkout10-div 0 5 => conv:bits->clkout-divider)))
  (#x0129 (default-value #x55)
          (contents (dclkout10-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout10-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x012b (default-value 0)
          (contents (dclkout10-adly 3 5 => conv:bits->analog-delay)
                    (dclkout10-adly-mux 2 1 => logic-active-high)
                    (dclkout10-mux 0 2 => clkout-mux-map)))
  (#x012c (default-value 0)
          (contents (dclkout10-hs 6 1 => logic-active-high)
                    (sdclkout11-mux 5 1 => devclk-sysref-map)
                    (sdclkout11-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout11-hs 0 1 => logic-active-high)))
  (#x012d (default-value 0)
          (contents (enable-sdcklout11-adly 4 1 => logic-active-high)
                    (sdclkout11-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x012e (default-value #b01110001)
          (contents (dclkout10-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout10-hsg-powerdown 6 1 => logic-active-high)
                    (dlclkout10-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout10-adly-powerdown 4 1 => logic-active-high)
                    (clkout10-11-powerdown 3 1 => logic-active-high)
                    (sdclkout11-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout11-powerdown 0 1 => logic-active-high)))
  (#x012f (default-value 1)
          (contents (sdclkout11-polarity 7 1 => output-polarity-map)
                    (clkout11-format 4 3 => output-format-map)
                    (dclkout10-polarity 3 1 => output-polarity-map)
                    (clkout10-format 0 3 => output-format-map)))
  (#x0130 (default-value 2)
          (contents (clkout12-13-odl 6 1 => logic-active-high)
                    (clkout12-13-idl 5 1 => logic-active-high)
                    (dclkout12-div 0 5 => conv:bits->clkout-divider)))
  (#x0131 (default-value #x55)
          (contents (dclkout12-ddly-cnt-high 4 4 => conv:bits->digital-delay-cnt)
                    (dclkout12-ddly-cnt-low 0 4 => conv:bits->digital-delay-cnt)))
  (#x0133 (default-value 0)
          (contents (dclkout12-adly 3 5 => conv:bits->analog-delay)
                    (dclkout12-adly-mux 2 1 => logic-active-high)
                    (dclkout12-mux 0 2 => clkout-mux-map)))
  (#x0134 (default-value 0)
          (contents (dclkout12-hs 6 1 => logic-active-high)
                    (sdclkout13-mux 5 1 => devclk-sysref-map)
                    (sdclkout13-ddly 1 4 => sdclkout-ddelay-map)
                    (sdclkout13-hs 0 1 => logic-active-high)))
  (#x0135 (default-value 0)
          (contents (enable-sdclkout13-adly 4 1 => logic-active-high)
                    (sdclkout13-adly 0 4 => conv:bits->sysout-analog-delay)))
  (#x0136 (default-value #b01111001)
          (contents (dclkout12-ddly-powerdown 7 1 => logic-active-high)
                    (dclkout12-hsg-powerdown 6 1 => logic-active-high)
                    (dclkout12-adlyg-powerdown 5 1 => logic-active-high)
                    (dclkout12-adly-powerdown 4 1 => logic-active-high)
                    (clkout12-13-powerdown 3 1 => logic-active-high)
                    (sdclkout13-disable-mode 1 2 => sysref-output-state-map)
                    (sdclkout13-powerdown 0 1 => logic-active-high)))
  (#x0137 (default-value 0)
          (contents (sdclkout13-polarity 7 1 => output-polarity-map)
                    (clkout13-format 4 3 => output-format-map)
                    (dclkout12-polarity 3 1 => output-polarity-map)
                    (clkout12-format 0 3 => output-format-map)))
  ;; #x0138...#x0145: SYSREF, SYNC, and Device Config
  (#x0138 (default-value 4)
          (contents (vco-mux 5 2 => vco-mux-map)
                    (oscout-mux 4 1 => oscout-mux-map)
                    (oscout-format 0 4 => oscout-format-map)))
  (#x0139 (default-value 0)
          (contents (sysref-mux 0 2 => sysref-mux-map)))
  (#x013a (default-value 12)
          (contents (sysref-div-high 0 5)))
  (#x013b (default-value 0)
          (contents (sysref-div-low 0 8)))
  (#x013c (default-value 0)
          (contents (sysref-ddly-high 0 5)))
  (#x013d (default-value 8)
          (contents (sysref-ddly-low 0 8)))
  (#x013e (default-value 3)
          (contents (sysref-pulse-cnt 0 2 => power-of-two)))
  (#x013f (default-value 0)
          (contents (pll2-nclk-mux 4 1 => pll2-nclk-mux-map)
                    (pll1-nclk-mux 3 1 => pll1-nclk-mux-map)
                    (fb-mux 1 2 => fb-mux-map)
                    (enable-fb-mux 0 1 => logic-active-high)))
  (#x0140 (default-value 7)
          (contents (pll1-powerdown 7 1 => logic-active-high)
                    (vco-ldo-powerdown 6 1 => logic-active-high)
                    (vco-powerdown 5 1 => logic-active-high)
                    (oscin-powerdown 4 1 => logic-active-high)
                    (sysref-global-powerdown 3 1 => logic-active-high)
                    (sysref-powerdown 2 1 => logic-active-high)
                    (sysref-ddly-powerdown 1 1 => logic-active-high)
                    (sysref-plsr-powerdown 0 1 => logic-active-high)))
  (#x0141 (default-value 0)
          (contents (enable-ddlyd-sysref 7 1 => logic-active-high)
                    (enable-ddlyd12 6 1 => logic-active-high)
                    (enable-ddlyd10 5 1 => logic-active-high)
                    (enable-ddlyd7 4 1 => logic-active-high)
                    (enable-ddlyd6 3 1 => logic-active-high)
                    (enable-ddlyd4 2 1 => logic-active-high)
                    (enable-ddlyd2 1 1 => logic-active-high)
                    (enable-ddlyd0 0 1 => logic-active-high)))
  (#x0142 (default-value 0)
          (contents (ddlyd-step-cnt 0 5 => unsigned-integer)))
  (#x0143 (default-value #b10010001)
          (contents (sysref-ddly-clr 7 1 => logic-active-high)
                    (enable-sync-1shot 6 1 => logic-active-high)
                    (sync-polarity 5 1 => sync-polarity-map)
                    (enable-sync 4 1 => logic-active-high)
                    (sync-pll2-dld 3 1 => logic-active-high)
                    (sync-pll1-dld 2 1 => logic-active-high)
                    (sync-mode 0 2 => sync-mode-map)))
  (#x0144 (default-value 0)
          (contents (disable-sync-sysref 7 1 => logic-active-high)
                    (disable-sync-12 6 1 => logic-active-high)
                    (disable-sync-10 5 1 => logic-active-high)
                    (disable-sync-8 4 1 => logic-active-high)
                    (disable-sync-6 3 1 => logic-active-high)
                    (disable-sync-4 2 1 => logic-active-high)
                    (disable-sync-2 1 1 => logic-active-high)
                    (disable-sync-0 0 1 => logic-active-high)))
  (#x0145 (default-value 0)
          (post-process (fixed 127))
          (contents (fixed-reg:0145 0 7)))
  ;; #x0146...#x0149: CLKin Control
  (#x0146 (default-value #b00011000)
          (contents (enable-clkin-2-auto-mode 5 1 => logic-active-high)
                    (enable-clkin-1-auto-mode 4 1 => logic-active-high)
                    (enable-clkin-0-auto-mode 3 1 => logic-active-high)
                    (clkin-2-type 2 1 => clkin-type-map)
                    (clkin-1-type 1 1 => clkin-type-map)
                    (clkin-0-type 0 1 => clkin-type-map)))
  (#x0147 (default-value #x00111010)
          (contents (clkin-sel-polarity 7 1 => clkin-sel-polarity-map)
                    (clkin-sel-mode 4 3 => clkin-sel-mode-map)
                    (clkin1-out-mux 2 2 => clkin1-out-mux-map)
                    (clkin0-out-mux 0 2 => clkin0-out-mux-map)))
  (#x0148 (default-value 2)
          (contents (clkin-sel0-mux 3 3 => clkin-sel0-mux-map)
                    (clkin-sel0-type 0 3 => pin-type-map)))
  (#x0149 (default-value #b01000010)
          (contents (sdio-readback-type 6 1 => sdio-readback-type-map)
                    (clkin-sel1-mux 3 3 => clkin-sel1-mux-map)
                    (clkin-sel1-type 0 3 => pin-type-map)))
  ;; RESET_MUX, RESET_TYPE
  (#x014a (default-value 2)
          (contents (reset-mux 3 3 => reset-mux-map)
                    (reset-type 0 3 => pin-type-map)))
  ;; #x014b...#x0152: Holdover
  (#x014b (default-value #b00010110)
          (contents (los-timeout 6 2 => los-timeout-map 'kHz)
                    (enable-los 5 1 => logic-active-high)
                    (enable-track 4 1 => logic-active-high)
                    (holdover-force 3 1 => logic-active-high)
                    (enable-manual-dac 2 1 => logic-active-high)
                    (manual-dac-high 0 2)))
  (#x014c (default-value 0)
          (contents (manual-dac-low 0 8)))
  (#x014d (default-value 0)
          (contents (dac-trip-low 0 6 => decode-dac-trip)))
  (#x014e (default-value 0)
          (contents (dac-clk-mult 6 2 => dac-clk-mult-map)
                    (dac-trip-high 0 6 => decode-dac-trip)))
  (#x014f (default-value 127)
          (contents (dac-clk-cntr 0 8 => unsigned-integer)))
  (#x0150 (default-value 3)
          (contents (holdover-pll1-detect 4 1 => logic-active-high)
                    (holdover-los-detect 3 1 => logic-active-high)
                    (holdover-vtune-detect 2 1 => logic-active-high)
                    (holdover-hitless-switch 1 1 => logic-active-high)
                    (enable-holdover 0 1 => logic-active-high)))
  (#x0151 (default-value 2)
          (contents (holdover-dld-cnt-high 0 6)))
  (#x0152 (default-value 0)
          (contents (holdover-dld-cnt-low 0 8)))
  ;; #x0153...#x015f: PLL1 Configuration
  (#x0153 (default-value 0)
          (contents (clkin0-r-divider-high 0 6)))
  (#x0154 (default-value 120)
          (contents (clkin0-r-divider-low 0 8)))
  (#x0155 (default-value 0)
          (contents (clkin1-r-divider-high 0 6)))
  (#x0156 (default-value 150)
          (contents (clkin1-r-divider-low 0 8)))
  (#x0157 (default-value 0)
          (contents (clkin2-r-divider-high 0 6)))
  (#x0158 (default-value 150)
          (contents (clkin2-r-divider-low 0 8)))
  (#x0159 (default-value 0)
          (contents (pll1-n-divider-high 0 6)))
  (#x015a (default-value 120)
          (contents (pll1-n-divider-low 0 8)))
  (#x015b (default-value #b11010100)
          (contents (pll1-window-size 6 2 => pll1-window-size-map)
                    (pll1-cp-tri-state 5 1 => logic-active-high)
                    (pll1-cp-polarity 4 1 => pll-cp-polarity-map)
                    (pll1-cp-gain 0 4 => pll1-cp-gain-map 'uA)))
  (#x015c (default-value 32)
          (contents (pll1-dld-cnt-high 0 6)))
  (#x015d (default-value 0)
          (contents (pll1-dld-cnt-low 0 8)))
  (#x015e (default-value 0)
          (contents (pll1-r-divider-dly 3 3 => pll1-delay-map 'ps)
                    (pll1-n-divider-dly 0 3 => pll1-delay-map 'ps)))
  (#x015f (default-value #b00001110)
          (contents (pll1-ld-mux 3 5 => pll-ld-mux-map)
                    (pll1-ld-type 0 3 => pll-ld-type-map)))
  ;; #x0160...#x016e: PLL2 Configuration
  (#x0160 (default-value 0)
          (contents (pll2-r-divider-high 0 4)))
  (#x0161 (default-value 2)
          (contents (pll2-r-divider-low 0 8)))
  (#x0162 (default-value #b01011101)
          (contents (pll2-prescaler 5 3 => pll2-prescaler-map)
                    (oscin-freq 2 3 => oscin-freq-map)
                    (enable-pll2-xtal 1 1 => logic-active-high)
                    (enable-pll2-ref-2x 0 1 => logic-active-high)))
  (#x0163 (default-value 0)
          (contents (pll2-n-calibration-phase-high 0 2)))
  (#x0164 (default-value 0)
          (contents (pll2-n-calibration-phase-mid 0 8)))
  (#x0165 (default-value 12)
          (contents (pll2-n-calibration-phase-low 0 8)))
  (#x0166 (default-value 0)
          (contents (enable-pll2-freq-calibration 2 1 => logic-active-low)
                    (pll2-n-divider-high 0 2)))
  (#x0167 (default-value 0)
          (contents (pll2-n-divider-mid 0 8)))
  ;; Before writing to register 0x168, registers 0x17c and 0x17d must be written!
  (#x0168 (default-value 12)
          (contents (pll2-n-divider-low 0 8)))
  (#x0169 (default-value #b01011001)
          (post-process (set #b00000001))
          (contents (pll2-window-size 5 2 => pll2-window-size-map)
                    (pll2-cp-gain 3 2 => pll2-cp-gain-map 'uA)
                    (pll2-cp-polarity 2 1 => pll-cp-polarity-map)
                    (pll2-cp-tri-state 1 1 => logic-active-high)))
  (#x016a (default-value 32)
          (contents (enable-sysref-req 6 1)
                    (pll2-dld-cnt-high 0 6)))
  (#x016b (default-value 0)
          (contents (pll2-dld-cnt-low 0 8)))
  (#x016c (default-value 0)
          (contents (pll2-loopfilter-r4 3 3 => pll2-loopfilter-resistor-map
                                        'ohm)
                    (pll2-loopfilter-r3 0 3 => pll2-loopfilter-resistor-map
                                        'ohm)))
  (#x016d (default-value 0)
          (contents (pll2-loopfilter-c4 4 4 => pll2-loopfilter-c4-map 'pF)
                    (pll2-loopfilter-c3 0 4 => pll2-loopfilter-c3-map 'pF)))
  (#x016e (default-value #b00010110)
          (contents (pll2-ld-mux 3 5 => pll-ld-mux-map)
                    (pll2-ld-type 0 3 => pll-ld-type-map)))
  ;; #x016f...#x188: Misc Registers
  ;;
  ;; #x184, #x185 and #x188 are de-facto read-only, even if the datasheet
  ;; doesn't say so explicitly: They only contain read-back registers.
  ;;
  ;; All `rb-*' entries do require neither level-2 nor level-3 setters.
  (#x0173 (default-value 0)
          (contents (pll2-prescaler-powerdown 6 1 => logic-active-high)
                    (pll2-powerdown 5 1 => logic-active-high)))
  (#x017c (default-value 21)
          (post-process (fixed 21))
          (contents (opt-reg-1 0 8 => unsigned-integer)))
  (#x017d (default-value 51)
          (post-process (fixed 51))
          (contents (opt-reg-2 0 8 => unsigned-integer)))
  (#x0182 (default-value 0)
          (contents (rb-pll1-ld-lost 2 1 => boolean-status)
                    (rb-pll1-ld 1 1 => boolean-status-inverted)
                    (clear-pll1-ld-lost 0 1 => logic-active-high)))
  (#x0183 (default-value 0)
          (contents (rb-pll2-ld-lost 2 1 => boolean-status)
                    (rb-pll2-ld 1 1 => boolean-status-inverted)
                    (clr-pll2-ld-lost 0 1 => logic-active-high)))
  (#x0184 (default-value 0)
          (contents (rb-dac-value-high 6 2)
                    (rb-clkin2-sel 5 1 => boolean-status)
                    (rb-clkin1-sel 4 1 => boolean-status)
                    (rb-clkin0-sel 3 1 => boolean-status)
                    (rb-clkin1-los 1 1 => boolean-status)
                    (rb-clkin0-los 0 1 => boolean-status)))
  (#x0185 (default-value 0)
          (contents (rb-dac-value-low 0 8)))
  (#x0188 (default-value 0)
          (contents (rb-holdover-active 4 1 => boolean-status)))
  ;; #x1ffd...#x1fff: Weird Registers (aka. SPI Lock Register)
  ;;
  ;; The following registers are particularly juicy. They are 24 bits, that
  ;; configure one thing: Can the other registers be written to or not.
  ;;
  ;; It gets better: The registers *have* to be written in sequence and you
  ;; *always* have to write to all of them if you want to write to one of them.
  ;;
  ;; In the `high' and in the `mid' word, "0x00" means you want the other
  ;; registers "unlocked". Any other value may be used to "lock". In the `low'
  ;; byte of the word, "83" means "unlocked", while any other value means
  ;; "locked".
  ;;
  ;; My *guess* is that they do this crazy dance to make sure unlocking
  ;; registers does never happen by accident.
  ;;
  ;; Oh yeah: The registers are also write-only. That means decoding doesn't
  ;; really make sense. But let's do some annotation anyway for testing
  ;; purposes.
  (#x1ffd (default-value 0)
          (contents (spi-lock-high 0 8 => decode-lock-word-high-mid)))
  (#x1ffe (default-value 0)
          (contents (spi-lock-mid 0 8 => decode-lock-word-high-mid)))
  (#x1fff (default-value 83)
          (contents (spi-lock-low 0 8 => decode-lock-word-low))))

;; Finally, handle interconnected values:

(define (combine-clkin0-r-divider data)
  (combine-value-width-pairs data '(clkin0-r-divider-high clkin0-r-divider-low)))

(define (combine-clkin1-r-divider data)
  (combine-value-width-pairs data '(clkin1-r-divider-high clkin1-r-divider-low)))

(define (combine-clkin2-r-divider data)
  (combine-value-width-pairs data '(clkin2-r-divider-high clkin2-r-divider-low)))

(define (combine-pll1-n-divider data)
  (combine-value-width-pairs data '(pll1-n-divider-high pll1-n-divider-low)))

(define (combine-pll1-dld-cnt data)
  (combine-value-width-pairs data '(pll1-dld-cnt-high pll1-dld-cnt-low)))

(define (combine-pll2-dld-cnt data)
  (combine-value-width-pairs data '(pll2-dld-cnt-high pll2-dld-cnt-low)))

(define (combine-pll2-r-divider data)
  (combine-value-width-pairs data '(pll2-r-divider-high pll2-r-divider-low)))

(define (combine-pll2-n-divider data)
  (combine-value-width-pairs data '(pll2-n-divider-high
                                    pll2-n-divider-mid
                                    pll2-n-divider-low)))

(define (combine-pll2-n-cal-phase data)
  (combine-value-width-pairs data '(pll2-n-calibration-phase-high
                                    pll2-n-calibration-phase-mid
                                    pll2-n-calibration-phase-low)))

(define (combine-holdover-dld-cnt data)
  (combine-value-width-pairs data '(holdover-dld-cnt-high
                                    holdover-dld-cnt-low)))

(define (combine-manual-dac data)
  (combine-value-width-pairs data '(manual-dac-high manual-dac-low)))

(define (combine-sysref-divider data)
  (combine-value-width-pairs data '(sysref-div-high sysref-div-low)))

(define (finally-divider-integer name value)
  (if (zero? value) 'reserved value))

(define finally-pll-dld-integer finally-divider-integer)

(define (finally-unsigned-integer name value) value)

(define (finally-sysref-divider name value)
  (format #f "~a" (if (< value 8) 'reserved value)))

(define (combine-sysref-digital-delay data)
  (combine-value-width-pairs data '(sysref-ddly-high sysref-ddly-low)))

(define (finally-sysref-digital-delay name value)
  (format #f "~a" (if (< value 8) 'reserved value)))

(define (combine-rb-dac-value data)
  (combine-value-width-pairs data '(rb-dac-value-high rb-dac-value-low)))

(define (combine-id-product data)
  (combine-value-width-pairs data '(id-product-high id-product-low)))

(define (combine-id-vendor data)
  (combine-value-width-pairs data '(id-vendor-high id-vendor-low)))

(define (finally-id-hex name value)
  (literal-hex name 0 16 value))

(define-register-interconns lmk04828
  (combine (clkin0-r-divider-high clkin0-r-divider-low)
           #:into clkin0-r-divider
           #:combine combine-clkin0-r-divider
           #:finally finally-divider-integer)
  (combine (clkin1-r-divider-high clkin1-r-divider-low)
           #:into clkin1-r-divider
           #:combine combine-clkin1-r-divider
           #:finally finally-divider-integer)
  (combine (clkin2-r-divider-high clkin2-r-divider-low)
           #:into clkin2-r-divider
           #:combine combine-clkin2-r-divider
           #:finally finally-divider-integer)
  (combine (id-product-high id-product-low)
           #:into id-product
           #:combine combine-id-product
           #:finally finally-id-hex)
  (combine (id-vendor-high id-vendor-low)
           #:into id-vendor
           #:combine combine-id-vendor
           #:finally finally-id-hex)
  (combine (pll1-n-divider-high pll1-n-divider-low)
           #:into pll1-n-divider
           #:combine combine-pll1-n-divider
           #:finally finally-divider-integer)
  (combine (pll1-dld-cnt-high pll1-dld-cnt-low)
           #:into pll1-dld-cnt
           #:combine combine-pll1-dld-cnt
           #:finally finally-pll-dld-integer)
  (combine (pll2-dld-cnt-high pll2-dld-cnt-low)
           #:into pll2-dld-cnt
           #:combine combine-pll2-dld-cnt
           #:finally finally-pll-dld-integer)
  (combine (pll2-n-calibration-phase-high
            pll2-n-calibration-phase-mid
            pll2-n-calibration-phase-low)
           #:into pll2-n-calibration-phase
           #:combine combine-pll2-n-cal-phase
           #:finally finally-divider-integer)
  (combine (pll2-n-divider-high pll2-n-divider-mid pll2-n-divider-low)
           #:into pll2-n-divider
           #:combine combine-pll2-n-divider
           #:finally finally-divider-integer)
  (combine (pll2-r-divider-high pll2-r-divider-low)
           #:into pll2-r-divider
           #:combine combine-pll2-r-divider
           #:finally finally-divider-integer)
  (combine (holdover-dld-cnt-high holdover-dld-cnt-low)
           #:into holdover-dld-cnt
           #:combine combine-holdover-dld-cnt
           #:finally finally-unsigned-integer)
  (combine (manual-dac-high manual-dac-low)
           #:into manual-dac
           #:combine combine-manual-dac
           #:finally finally-unsigned-integer)
  (combine (rb-dac-value-high rb-dac-value-low)
           #:into rb-dac-value
           #:combine combine-rb-dac-value
           #:finally finally-unsigned-integer)
  (combine (sysref-ddly-high sysref-ddly-low)
           #:into sysref-digital-delay
           #:combine combine-sysref-digital-delay
           #:finally finally-sysref-digital-delay)
  (combine (sysref-div-high sysref-div-low)
           #:into sysref-divider
           #:combine combine-sysref-divider
           #:finally finally-sysref-divider))
