#+TITLE: Device Description Language Specification
#+AUTHOR: Frank Terbeck
#+EMAIL: ft@bewatermyfriend.org
#+OPTIONS: num:t toc:nil
#+ATTR_ASCII: :width 79
#+LATEX_CLASS_OPTIONS: [a4paper]
# #+LATEX_HEADER: \textwidth 13cm
# #+LATEX_HEADER: \hoffset 0cm

#+LATEX: \setlength\parskip{0.2cm}

#+LATEX: \vspace{6cm}

#+LATEX: \thispagestyle{empty}

#+BEGIN_ABSTRACT

Given a useful, annotated representation of a configurable device's internals
allows to infer a lot of additional information that enables software to
automatically generate most, if not all of the code that is required to deal
with these devices. It also opens the door for compiler backends that compile
to C library code, targeting micro-controller platforms. This document
describes the domain specific language (DSL) used by the chip-remote project to
represent and annotate configurable devices. The language is made up of
S-expressions and uses the Scheme reader to perform all parsing tasks, which is
convenient and enables a number of useful techniques when compiling to Scheme.


#+END_ABSTRACT

#+ASCII:

#+ASCII:

#+ASCII:

#+LATEX: \newpage

#+TOC: headlines 3

#+LATEX: \newpage

* Notes

** How to deal with banks

   Some manufacturers like the idea of grouping registers into banks. The
   current concept did not consider banks at all. I don't feel that this is
   necessary. Making banks explicit would introduce quite a bit of redundancy
   into device definition files with very little benefit.

   If there are, say six banks in a device, we will just determine how many
   bits that is going to cost us and add those in front of the usual register
   address. Add to that a few functions that can extract and encode the real
   register addresses as well as bank addresses from and into the new composite
   address word and we'll be set.

   In the definition files themselves, the existence of banks should be
   possible with a single declaration ~(banks 6)~. And to place a register in a
   certain bank should be done with its definition:

#+BEGIN_SRC scheme
  (register #x23
    #:bank 3
    #:default 42
    #:contents ...)
#+END_SRC

   Six banks require three bits to encode, so the above address would change:

   - From: ~00100011~ (~0x23~)
   - To: ~00100011110~ (~0x11e~)

   The lower level compilers will not care about this. The impact will be on
   the high level compiler.


* Meta Information

  The forms described within this section capture information about a device
  that bears little to no technical relevance. They provide additional
  annotation about facts like the origin and documentation of the device that
  is being described.

** name

   Synopsis:\hspace{0.5cm} ~(name NAME)~

   The ~name~ form reflects the name of a device. The parameter ~NAME~ has to
   be a symbol or a string. Example: ~(name 'cdce72010)~

** manufacturer

   Synopsis:\hspace{0.5cm} ~(manufacturer NAME)~

   This form allows users to express the name of the manufacturer of a device.
   The ~NAME~ parameter has to be a string.

   \noindent{}Example:\hspace{0.25cm} ~(manufacturer "Texas Instruments")~

** datasheet-code

   Synopsis:\hspace{0.5cm} ~(datasheet-code CODE)~

   Some manufacturers assign document codes to their datasheets. This form
   enables users to express such codes. The ~CODE~ parameter has toe be a
   symbol or a string. Example: ~(datasheet-code 'scas858)~

** datasheet-uri

   Synopsis:\hspace{0.5cm} ~(datasheet-uri URI)~

   Most manufacturers offer users to access datasheets directly from their
   websites. This form allows users to provide a direct URI for datasheet
   retrieval. The ~URI~ parameter has to be a string.

   \noindent{}Example:\hspace{0.25cm} ~(datasheet-uri "http://www.ti.com/lit/pdf/scas858")~


* Default Values

  In order to specify defaults for certain fields of register definitions, the
  language defines a few simple forms to express them.

** default-value

   Synopsis:\hspace{0.5cm} ~(default-value VALUE)~

   The ~VALUE~ provided to this form defines the default value for all
   registers of a device, that do not define a default value of their own. The
   parameter ~VALUE~ has to be a positive integer.

   \noindent{}Example:\hspace{0.25cm} ~(default-value #x3242)~


** default-post-processor

   Synopsis:\hspace{0.5cm} ~(default-post-processor VALUE)~

   Each register may specify a post-processor. It they do not, this form can be
   used to specify a default post-processor. For details about ~VALUE~ see the
   ~post-processor~ field definition of the ~register~ form.


* Register Information

** The register form

   - *TBD*


* Interconnections

** dependencies-for

   - *TBD*

** combine-into

   - *TBD*


* Encoding and Decoding

** encoder

   - *TBD*

** decoder

   - *TBD*

** encode-using

   - *TBD*

** decode-using

   - *TBD*


* Version <<sec:version-number>>

    - Current status of the specification: *Draft*

  This document specifies version 0.0.0 of the domain-specific language used in
  chip-remote's device descriptions. In detail:

  |---------------+-----|
  | <l>           | <c> |
  | Major Version | *0* |
  | Minor Version | *0* |
  | Micro Version | *0* |
  |---------------+-----|

** Major Version Number

   The major version number will be changed *only* to indicate differences that
   break backward compatibility with earlier versions of the specification.
   Major version “0” indicates early mock-up.

** Minor Version Number

   Changes in the minor version number indicate changes in previously existing
   features, that do not break backward compatibility, as well as major feature
   additions.

** Micro Version Number

   Changes in the micro version number indicate the addition of small features
   as well as bug-fixes.

** Version History

   There is no version history at this point.


#+LATEX: \newpage


* Full Copyright Statement

   Copyright © 2016-2018 ~Frank Terbeck <ft@bewatermyfriend.org>~.
   All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice.

   The limited permissions granted above are perpetual and will not be
   revoked by the authors or their successors or assigns.

   This document and the information contained herein is provided on
   an “AS IS” basis and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
   OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY
   IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
   PURPOSE.
